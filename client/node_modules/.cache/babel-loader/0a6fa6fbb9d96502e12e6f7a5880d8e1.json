{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./shop/shop.saga\";\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware(); //creating it like this to make it more scalable.\n\nconst middleWare = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleWare.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleWare)); // sagaMiddleware.run();\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/daniel/udemy/react/course/e-com/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middleWare","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAsC,kBAAtC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMI,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,UAAU,CAACI,IAAX,CAAgBT,MAAhB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,UAAJ,CAA7B,CAAzB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { fetchCollectionsStart } from \"./shop/shop.saga\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\n//creating it like this to make it more scalable.\nconst middleWare = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleWare.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleWare));\n\n// sagaMiddleware.run();\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}