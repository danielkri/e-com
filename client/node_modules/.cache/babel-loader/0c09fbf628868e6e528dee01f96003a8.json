{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n  payload: collectionsMap\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\"); // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/e-com-d-b/databases/(default)/documents/collections\"\n    // )\n    //   .then((response) => response.json())\n    //   .then((collections) => console.log(collections));\n\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot); // updateCollections(collectionMap);\n\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/daniel/udemy/react/course/e-com/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","payload","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,uBADkC;AAExDC,EAAAA,OAAO,EAAEH;AAF+C,CAArB,CAA9B;AAKP,OAAO,MAAMI,uBAAuB,GAAIJ,cAAD,KAAqB;AAC1DC,EAAAA,IAAI,EAAEL,eAAe,CAACS,yBADoC;AAE1DF,EAAAA,OAAO,EAAEH;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMM,uBAAuB,GAAIC,YAAD,KAAmB;AACxDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADkC;AAExDL,EAAAA,OAAO,EAAEI;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CADmB,CAGnB;AACA;AACA;AACA;AACA;;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,aAAa,GAAGlB,+BAA+B,CAACiB,QAAD,CAArD,CADkB,CAElB;;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACY,aAAD,CAAxB,CAAR;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAWR,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAP5B;AAQD,GAnBD;AAoBD,CArBM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n\n    // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/e-com-d-b/databases/(default)/documents/collections\"\n    // )\n    //   .then((response) => response.json())\n    //   .then((collections) => console.log(collections));\n\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n        // updateCollections(collectionMap);\n        dispatch(fetchCollectionsSuccess(collectionMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}